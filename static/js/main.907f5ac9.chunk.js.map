{"version":3,"sources":["DrumPad.tsx","Display.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DrumPad","props","handleClick","bind","handleKeyDown","playSound","soundEnded","this","event","key","toLowerCase","sound","document","getElementById","play","soundPlayed","name","target","onKeyDown","className","onClick","id","src","path","onEnded","React","Component","Display","display","sounds","process","App","state","playingSound","setPlayingSound","handleSoundEnded","setState","prevState","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.907f5ac9.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\";\r\nimport EventListener from 'react-event-listener';\r\nimport { Sound } from \"./models\";\r\n\r\ntype DrumPadProps = {\r\n    sound: Sound,\r\n    soundPlayed: (name: string) => void\r\n    soundEnded: (name: string) => void\r\n};\r\n\r\ntype DrumPadState = {\r\n\r\n};\r\n\r\nexport class DrumPad extends React.Component<DrumPadProps, DrumPadState> {\r\n\r\n    constructor(props: DrumPadProps) {\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n        this.playSound = this.playSound.bind(this);\r\n        this.soundEnded = this.soundEnded.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.playSound();\r\n    }\r\n\r\n    handleKeyDown(event: KeyboardEvent) {\r\n        if (event.key.toLowerCase() === this.props.sound.key) {\r\n            this.playSound();\r\n        }\r\n    }\r\n\r\n    playSound() {\r\n        const audio = document.getElementById(this.props.sound.key) as HTMLAudioElement;\r\n        audio.play();\r\n\r\n        this.props.soundPlayed(this.props.sound.name);\r\n    }\r\n\r\n    soundEnded() {\r\n        this.props.soundEnded(this.props.sound.name);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <EventListener\r\n                target=\"window\"\r\n                onKeyDown={this.handleKeyDown}\r\n            >\r\n                <div className=\"drum-pad\" onClick={this.handleClick}>\r\n                    {this.props.sound.key}\r\n                    <audio\r\n                        id={this.props.sound.key}\r\n                        src={this.props.sound.path}\r\n                        onEnded={this.soundEnded}\r\n                        className=\"clip\">\r\n                    </audio>\r\n                </div>\r\n            </EventListener>\r\n        );\r\n    }\r\n}","type DisplayProps = {\r\n    display: string\r\n};\r\n\r\nfunction Display(props: DisplayProps) {\r\n    return (\r\n        <div id=\"display\">{props.display}</div>\r\n    );\r\n}\r\n\r\nexport default Display;","import './App.css';\nimport { Sound } from './models';\nimport { DrumPad } from './DrumPad';\nimport { Component } from 'react';\nimport Display from './Display';\n\nconst sounds: Sound[] = [\n  {\n    name: 'kick1',\n    path: `${process.env.PUBLIC_URL}/sounds/kick-1.wav`,\n    key: 'q'\n  }, {\n    name: 'kick2',\n    path: `${process.env.PUBLIC_URL}/sounds/kick-2.wav`,\n    key: 'w'\n  }, {\n    name: 'kick3',\n    path: `${process.env.PUBLIC_URL}/sounds/kick-3.wav`,\n    key: 'e'\n  }, {\n    name: 'kick4',\n    path: `${process.env.PUBLIC_URL}/sounds/kick-4.wav`,\n    key: 'a'\n  }, {\n    name: 'clap1',\n    path: `${process.env.PUBLIC_URL}/sounds/clap-1.wav`,\n    key: 's'\n  }, , {\n    name: 'clap2',\n    path: `${process.env.PUBLIC_URL}/sounds/clap-2.wav`,\n    key: 'd'\n  }, {\n    name: 'hi-hat-1',\n    path: `${process.env.PUBLIC_URL}/sounds/hi-hat-1.wav`,\n    key: 'z'\n  }, {\n    name: 'hi-hat-2',\n    path: `${process.env.PUBLIC_URL}/sounds/hi-hat-2.wav`,\n    key: 'x'\n  }, {\n    name: 'bass',\n    path: `${process.env.PUBLIC_URL}/sounds/bass.wav`,\n    key: 'c'\n  }\n] as Sound[];\n\ntype AppState = {\n  playingSound: string\n};\n\ntype AppProps = {};\n\nclass App extends Component<AppProps, AppState> {\n\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      playingSound: ''\n    };\n\n    this.setPlayingSound = this.setPlayingSound.bind(this);\n    this.handleSoundEnded = this.handleSoundEnded.bind(this);\n  }\n\n  setPlayingSound(sound: string) {\n    this.setState({\n      playingSound: sound\n    });\n  }\n\n  handleSoundEnded(sound: string) {\n    this.setState((prevState) => ({\n      playingSound: prevState.playingSound === sound ? '' : prevState.playingSound\n    }));\n  }\n\n  render() {\n    return (\n      <div id=\"drum-machine\">\n        <div id=\"display\"></div>\n        {\n          sounds.map(sound => (\n            <DrumPad\n              key={sound.name}\n              sound={sound}\n              soundPlayed={this.setPlayingSound}\n              soundEnded={this.handleSoundEnded} />\n          ))}\n        <Display display={this.state.playingSound} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}